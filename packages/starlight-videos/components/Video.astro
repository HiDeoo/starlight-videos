---
import { YouTube } from '@astro-community/astro-embed-youtube'
import { LinkButton } from '@astrojs/starlight/components'
import type { Props as StarlightProps } from '@astrojs/starlight/props'
import type { ComponentProps } from 'astro/types'

import type { CollectionVideo, Video } from '../schemas'

import Difficulty from './Difficulty.astro'
import VideoCollectionVideos from './VideoCollectionVideos.astro'

interface Props extends StarlightProps {
  video: Video | CollectionVideo
}

const { video } = Astro.props

// TODO(HiDeoo) Youtube playlabel i18n
---

<div class="sl-videos-video">
  <div
    class:list={['sl-videos-video-player', { 'sl-videos-video-player-collection': video.type === 'collection-video' }]}
  >
    <YouTube id={video.link} posterQuality="max" />
    {
      video.type === 'collection-video' && (
        <VideoCollectionVideos {...Astro.props} collectionVideo={video} variant="playlist" />
      )
    }
  </div>
  <div class="sl-videos-video-meta">
    {video.difficulty && <Difficulty value={video.difficulty} />}
    {
      video.actions.length > 0 && (
        <div class="sl-videos-video-meta-actions">
          {video.actions.map((action) => (
            <LinkButton
              href={action.link}
              icon={action.icon as ComponentProps<typeof LinkButton>['icon']}
              iconPlacement={action.iconPlacement}
              variant={action.variant}
            >
              {action.text}
            </LinkButton>
          ))}
        </div>
      )
    }
  </div>
</div>

<style>
  .sl-videos-video {
    --sl-videos-playlist-width: 22rem;

    background-attachment: red;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .sl-videos-video :global(lite-youtube) {
    min-width: 100%;
  }

  @media (min-width: 65rem) {
    .sl-videos-video-player.sl-videos-video-player-collection {
      margin-right: var(--sl-videos-playlist-width);
      position: relative;
    }
  }

  .sl-videos-video-meta {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .sl-videos-video-meta-actions {
    display: contents;
  }

  @media (min-width: 40rem) {
    .sl-videos-video-meta {
      align-items: center;
      flex-direction: row;
      justify-content: space-between;
    }

    .sl-videos-video-meta-actions {
      display: flex;
      gap: 1rem;
    }
  }

  .sl-videos-video-meta-actions :global(a) {
    align-self: flex-start;
  }

  @media (min-width: 50rem) {
    .sl-videos-video-meta-actions :global(a) {
      padding-block: 0.625rem;
    }
  }
</style>
